{{- define "common.deployment" -}}
{{- $common := dict "Values" .Values.common -}}
{{- $noCommon := omit .Values "common" -}}
{{- $overrides := dict "Values" $noCommon -}}
{{- $noValues := omit . "Values" -}}
{{- with merge $noValues $overrides $common -}}
apiVersion: extensions/v1beta1
kind: Deployment
{{ template "common.metadata" . }}
spec:
  template:
    metadata:
      labels:
        simpletrip: {{ include "common.name" . }}
{{- with .Values.labels }}
{{ tpl . $ | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: {{ include "common.containerName" . }}
        image: {{ .Values.imageRepository }}/{{ template "common.name" . }}:{{ .Values.imageTag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        args: [
{{  range .Values.arguments }}
{{ . }}
{{ end }}
        ]
        ports:
        - containerPort: {{ .Values.servicePort }}
{{- if .Values.httpsEnabled }}
        - containerPort: {{ .Values.httpsPort }}
{{- end }}
        envFrom:
        - configMapRef:
            name: spring-boot-cloud
{{- if .Values.mockClientsConfEnabled }}
        - configMapRef:
            name: mock-clients-configuration
            optional: true
{{- end }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbePath }}
            port: {{ .Values.servicePort }}
          initialDelaySeconds: {{ .Values.livenessProbeInitialDelaySeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbePath }}
            port: {{ .Values.servicePort }}
          initialDelaySeconds: {{ .Values.readinessProbeInitialDelaySeconds }}
        env:
{{- with .Values.extraEnv }}
{{ tpl . $ | indent 8 }}
{{- end }}
{{- if .Values.secretsEnabled }}
        - name: SPRING_CONFIG_ADDITIONAL-LOCATION
          value: file:/etc/secrets/
{{- end }}
        - name: SPRING_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: spring-boot-cloud
              key: spring.environment
        - name: CLOUD_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: spring-boot-cloud
              key: cloud.environment
        - name: SERVER_PORT
          value: {{ quote .Values.servicePort }}
{{- if .Values.awsEnabled }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.awsSecretKeyRefName }}
              key: key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.awsSecretKeyRefName }}
              key: secret
{{- end }}
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_TRACE_ENABLED
          valueFrom:
            configMapKeyRef:
              name: datadog-config
              key: apm.enabled
        - name: {{ .Values.datadogServiceNameEnv}}
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['simpletrip']
{{- if .Values.autoTraceIdInjection }}
        - name: DD_LOGS_INJECTION
          value: 'true'
{{- end }}
        - name: DD_TRACE_ANALYTICS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: datadog-config
              key: apm.enabled
{{- if .Values.secretsEnabled }}
        volumeMounts:
        - name: {{ .Values.secretsName }}
          mountPath: /etc/secrets/
          readOnly: true
      volumes:
      - name: {{ .Values.secretsName }}
        secret:
          secretName: {{ .Values.secretsName }}
{{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: simpletrip
                operator: In
                values:
                - {{ include "common.name" . }}
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        role: general-purpose
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
{{- end -}}
{{- end -}}
